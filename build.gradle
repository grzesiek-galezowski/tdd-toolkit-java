buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.1.9"
    }
}

plugins {
    id 'net.researchgate.release' version "2.3.5"
}

apply plugin: "info.solidsoft.pitest"
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: "jacoco"

def password = new File('C:\\Users\\astral\\Dysk Google\\GradlePassword.txt').text

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.allTasks.any { it instanceof Sign }) {
        allprojects {
            ext."signing.password" = password
            ext."signing.keyId" = '214AA4AD'
            ext."signing.secretKeyRingFile" = 'C:/Users/astral/AppData/Roaming/gnupg/secring.gpg'
        }
    }
}

group 'com.github.grzesiek-galezowski'
description = """TDD Toolkit"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}


task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

test {
    useTestNG()
}

pitest {
    targetClasses = ['com.github.grzesiek_galezowski.test_environment.*']  //by default "${project.group}.*"
    threads = 8
    outputFormats = ['XML', 'HTML']
}

checkstyle {
    ignoreFailures = false
}

findbugs {
    effort = "max"
    reportLevel = "high"
    ignoreFailures = false
}

dependencies {
    compile "com.google.guava:guava:19.0"
    compile "org.assertj:assertj-core:3.3.0"
    compile "org.testng:testng:6.9.11"
    compile "org.mockito:mockito-core:1.10.19"
    compile "com.github.autofixture:autofixturegenerator:1.0.7"
    compile "com.google.code.gson:gson:2.6.2"
    compile "nl.jqno.equalsverifier:equalsverifier:2.0.1"
    compile 'com.sharneng:jsr305defaults:2.0.3'
    compile 'org.reflections:reflections:0.9.10'
    compile 'org.mutabilitydetector:MutabilityDetector:0.9.5'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

signing {
    sign configurations.archives
}

release {
    failOnCommitNeeded = false
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                //repository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: "grzesiek-galezowski", password: password)
            }

            pom.project {
                name 'tdd-toolkit-java'
                packaging 'jar'
                description 'TDD Toolkit'
                url 'https://github.com/grzesiek-galezowski/tdd-toolkit-java'

                scm {
                    url 'scm:git@github.com:grzesiek-galezowski/tdd-toolkit-java.git'
                    connection 'scm:git@github.com:grzesiek-galezowski/tdd-toolkit-java.git'
                    developerConnection 'scm:git@github.com:grzesiek-galezowski/tdd-toolkit-java.git'
                }

                licenses {
                    license {
                        name 'The MIT License (MIT)'
                        url 'http://opensource.org/licenses/MIT'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'grzesiek-galezowski'
                        name 'Grzegorz Gałęzowski'
                    }
                }
            }
        }
    }
}

uploadArchives.dependsOn([jar, test])
check.dependsOn("pitest")

afterReleaseBuild.dependsOn uploadArchives
tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}